name: Build OpenWrt

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * 0'  # 每周日 UTC 8点运行一次，可选

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: config/.config
  ARMV8_IMAGE: aarch64_cortex-a72_glibc  # 用于交叉编译工具链
  LOG_LEVEL: 99  # 详细日志

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 初始化环境
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib gettext git libncurses5-dev libssl-dev python3-distutils zlib1g-dev file wget unzip libglib2.0-dev libgmp3-dev libmpfr-dev libmpc-dev lib32z1-dev libesd0-dev aria2

    - name: 克隆模板仓库
      uses: actions/checkout@v4
      with:
        path: template

    - name: 克隆源代码
      run: |
        git clone --depth=1 -b ${{ env.REPO_BRANCH }} ${{ env.REPO_URL }} lede
        cd lede
        git config --local user.name "GitHub Action"
        git config --local user.email "action@github.com"

    - name: 更新 feeds
      run: |
        cd lede
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 复制配置
      run: |
        [[ -e ${{ env.CONFIG_FILE }} ]] && cp ${{ env.CONFIG_FILE }} lede/.config || echo "无自定义 config，使用默认"

    - name: 生成 defconfig
      run: |
        cd lede
        make defconfig

    - name: 下载依赖
      run: |
        cd lede
        make download -j$(nproc) V=s

    - name: 编译固件
      run: |
        cd lede
        make -j$(nproc) V=${{ env.LOG_LEVEL }} || make -j1 V=${{ env.LOG_LEVEL }}  # 单线程 fallback

    - name: 上传固件
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt-Firmware-RAX3000M-NAND
        path: |
          lede/bin/targets/mediatek/filogic/*.bin
          lede/bin/targets/mediatek/filogic/*.tar.gz
          lede/bin/targets/mediatek/filogic/*.zip
        retention-days: 30
